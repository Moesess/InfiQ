# Generated by Django 4.2.3 on 2023-07-12 10:25
from datetime import datetime

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('q_uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UID')),
                ('q_text', models.TextField(verbose_name='Text')),
                ('q_img', models.ImageField(blank=True, null=True, upload_to='')),
                ('q_created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('q_id', models.CharField(blank=True, editable=False, max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Question',
                'ordering': ['q_uid'],
                'get_latest_by': ['q_uid'],
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('t_uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UID')),
                ('t_created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('t_questions', models.ManyToManyField(to='API.question', verbose_name='Questions')),
            ],
            options={
                'verbose_name': 'Test',
                'ordering': ['t_uid'],
                'get_latest_by': ['t_uid'],
            },
        ),
        migrations.CreateModel(
            name='TestType',
            fields=[
                ('tt_uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UID')),
                ('tt_name', models.CharField(max_length=20, unique=True, verbose_name='Name')),
                ('tt_text', models.TextField(verbose_name='Text')),
                ('tt_created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'ExamType',
                'ordering': ['tt_uid'],
                'get_latest_by': ['tt_uid'],
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('tr_uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UID')),
                ('tr_date_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start date')),
                ('tr_date_end', models.DateTimeField(null=True, verbose_name='End date')),
                ('tr_score', models.IntegerField(verbose_name='Score')),
                ('tr_isDone', models.BooleanField(default=False)),
                ('tr_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.test', verbose_name='Test')),
            ],
            options={
                'verbose_name': 'TestResult',
                'ordering': ['tr_uid'],
                'get_latest_by': ['tr_uid'],
            },
        ),
        migrations.AddField(
            model_name='test',
            name='t_testType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.testtype', verbose_name='Test type'),
        ),
        migrations.AddField(
            model_name='test',
            name='t_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='question',
            name='q_testType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.testtype', verbose_name='Test type'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('a_uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UID')),
                ('a_text', models.TextField(verbose_name='Text')),
                ('a_correct', models.BooleanField(verbose_name='Is correct?')),
                ('a_created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('a_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='API.question', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Answer',
                'ordering': ['a_uid'],
                'get_latest_by': ['a_uid'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('name', models.CharField()),
                ('email', models.CharField()),
                ('password', models.CharField()),
                ('number_of_tests', models.PositiveIntegerField(default=0, verbose_name="Number of tests")),
                ('best_score', models.IntegerField(default=0, verbose_name="Best score")),
                ('best_time', models.DateTimeField(default=datetime.now, verbose_name="Best time")),
                ('correct_answers', models.PositiveIntegerField(default=0, verbose_name="Correct answers")),
                ('all_answers', models.PositiveIntegerField(default=0, verbose_name="All answers")),
                ('accuracy', )
            ],
            options={
                'verbose_name': 'User',
                'ordering': 'username',
                'get_latest_by': ['username']
            }
        )
    ]
